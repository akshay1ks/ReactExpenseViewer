{"ast":null,"code":"var _jsxFileName = \"I:\\\\Codes\\\\01-starting-setup\\\\src\\\\components\\\\NewExpenses\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = props => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [amount, setAmount] = useState('');\n  const [date, setDate] = useState('');\n  const [isFormOpen, setIsFormOpen] = useState(false); // const [userInput, setUserInput] = useState({\n  //     title: '',\n  //     amount: '',\n  //     date: ''\n  // })\n\n  const titleChangeHandler = event => {\n    setTitle(event.target.value); // setUserInput({\n    //     ...userInput,\n    //     title: event.target.value\n    // })\n    //------------------------below approach is more foolproof-----------------------------\n    // setUserInput((prevState) => {\n    //     return { ...prevState, title: event.target.value};\n    // });\n  };\n\n  const amountChangeHandler = event => {\n    setAmount(event.target.value);\n  };\n\n  const dateChangeHandler = event => {\n    setDate(event.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: title,\n      amount: amount,\n      date: new Date(date)\n    };\n    props.onSaveExpenseData(expenseData);\n    setTitle('');\n    setAmount('');\n    setDate('');\n  };\n\n  const formContent = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense__actions\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: setIsFormOpen(true),\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n\n  if (isFormOpen === true) {\n    formContent = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: titleChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"0.01\",\n            step: \"0.01\",\n            value: amount,\n            onChange: amountChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            min: \"2019-01-01\",\n            max: \"2022-12-31\",\n            value: date,\n            onChange: dateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: setIsFormOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: submitHandler,\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: formContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExpenseForm, \"9EFtMr3P1S0kLJmZm9pfgwb22B4=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["I:/Codes/01-starting-setup/src/components/NewExpenses/ExpenseForm.js"],"names":["React","useState","ExpenseForm","props","title","setTitle","amount","setAmount","date","setDate","isFormOpen","setIsFormOpen","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","Date","onSaveExpenseData","formContent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [title, setTitle] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [isFormOpen, setIsFormOpen] = useState(false);\r\n\r\n    // const [userInput, setUserInput] = useState({\r\n    //     title: '',\r\n    //     amount: '',\r\n    //     date: ''\r\n    // })\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setTitle(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     title: event.target.value\r\n        // })\r\n        //------------------------below approach is more foolproof-----------------------------\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, title: event.target.value};\r\n        // });\r\n    }\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setAmount(event.target.value);\r\n    }\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setDate(event.target.value);\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: title,\r\n            amount: amount,\r\n            date: new Date(date)\r\n        }\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n        setTitle('');\r\n        setAmount('');\r\n        setDate('');\r\n    }\r\n\r\n    const formContent = (\r\n    <div className=\"new-expense__actions\">\r\n        <button type=\"submit\" onClick={setIsFormOpen(true)}>Add New Expense</button>\r\n    </div>);\r\n\r\n    if(isFormOpen === true){\r\n        formContent = (\r\n            <div>\r\n                <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type='text' value={title} onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type='number' min=\"0.01\" step=\"0.01\" value={amount} onChange={amountChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input type='date' min=\"2019-01-01\" max=\"2022-12-31\" value={date} onChange={dateChangeHandler} />\r\n                </div>\r\n                </div>\r\n                <div className=\"new-expense__actions\">\r\n                    <button type=\"submit\" onClick={setIsFormOpen(false)}>Cancel</button>\r\n                </div>\r\n                <div className=\"new-expense__actions\">\r\n                    <button type=\"submit\" onClick={submitHandler}>Add Expense</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            {formContent}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ExpenseForm;"]},"metadata":{},"sourceType":"module"}